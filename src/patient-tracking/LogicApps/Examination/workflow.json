{
  "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
          "Condition": {
              "actions": {
                  "Set_Queue_to_needs_labs": {
                      "inputs": {
                          "name": "next_queue_name",
                          "value": "needs-labs-queue"
                      },
                      "type": "SetVariable"
                  }
              },
              "else": {
                  "actions": {
                      "Set_Queue_to_examined": {
                          "inputs": {
                              "name": "next_queue_name",
                              "value": "examined-queue"
                          },
                          "type": "SetVariable"
                      }
                  }
              },
              "expression": {
                  "and": [
                      {
                          "greaterOrEquals": [
                              "@variables('needs_labs')",
                              1
                          ]
                      }
                  ]
              },
              "runAfter": {
                  "Needs_Labs_Randomizer": [
                      "SUCCEEDED"
                  ]
              },
              "type": "If"
          },
          "Delay": {
              "inputs": {
                  "interval": {
                      "count": "@rand(5,10)",
                      "unit": "Second"
                  }
              },
              "runAfter": {},
              "type": "Wait"
          },
          "Initialize_variable": {
              "inputs": {
                  "variables": [
                      {
                          "name": "next_queue_name",
                          "type": "string"
                      }
                  ]
              },
              "runAfter": {
                  "Delay": [
                      "SUCCEEDED"
                  ]
              },
              "type": "InitializeVariable"
          },
          "Needs_Labs_Randomizer": {
              "inputs": {
                  "variables": [
                      {
                          "name": "needs_labs",
                          "type": "integer",
                          "value": "@rand(0,2)"
                      }
                  ]
              },
              "runAfter": {
                  "Set_variable": [
                      "SUCCEEDED"
                  ]
              },
              "type": "InitializeVariable"
          },
          "Send_message": {
              "inputs": {
                  "parameters": {
                      "entityName": "@variables('next_queue_name')",
                      "message": {
                          "contentData": "@triggerBody()?['contentData']",
                          "contentType": "application/json"
                      }
                  },
                  "serviceProviderConfiguration": {
                      "connectionName": "serviceBus",
                      "operationId": "sendMessage",
                      "serviceProviderId": "/serviceProviders/serviceBus"
                  }
              },
              "runAfter": {
                  "Condition": [
                      "SUCCEEDED"
                  ]
              },
              "type": "ServiceProvider"
          },
          "Set_variable": {
              "inputs": {
                  "name": "next_queue_name",
                  "value": "needs-labs-queue"
              },
              "runAfter": {
                  "Initialize_variable": [
                      "SUCCEEDED"
                  ]
              },
              "type": "SetVariable"
          }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "triggers": {
          "When_messages_are_available_in_a_queue": {
              "inputs": {
                  "parameters": {
                      "isSessionsEnabled": false,
                      "queueName": "taken-vitals-queue"
                  },
                  "serviceProviderConfiguration": {
                      "connectionName": "serviceBus",
                      "operationId": "receiveQueueMessages",
                      "serviceProviderId": "/serviceProviders/serviceBus"
                  }
              },
              "splitOn": "@triggerOutputs()?['body']",
              "type": "ServiceProvider"
          }
      }
  },
  "kind": "Stateful"
}